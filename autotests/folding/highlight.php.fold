<?
<beginfold id='24'>/*</beginfold id='24'> This is a pseudo PHP file to test Kate's PHP syntax highlighting. <endfold id='24'>*/</endfold id='24'>
# TODO: this is incomplete, add more syntax examples!
# this is also a comment.
// Even this is a comment
function test($varname) <beginfold id='27'>{</beginfold id='27'>
	return "bla";	# this is also a comment
<endfold id='27'>}</endfold id='27'>

?>

<?php echo("hello test"); ?>

<html>
	<? print "<title>test</title>"; ?>

	<beginfold id='1'><!--</beginfold id='1'> CSS <endfold id='1'>--></endfold id='1'>
	<beginfold id='5'><style</beginfold id='5'>>
		.inputText <beginfold id='83'>{</beginfold id='83'>
			width: <?php echo $width; ?>px;
			text-indent: 10px;
		<endfold id='83'>}</endfold id='83'>
	<endfold id='5'></style</endfold id='5'>>

	<beginfold id='1'><!--</beginfold id='1'> JavaScript <endfold id='1'>--></endfold id='1'>
	<beginfold id='6'><script</beginfold id='6'>>
		var some_js_var = <?php echo $somevar; ?> ;
		<?php echo 'alert("Hello there.");'; ?>
	<endfold id='6'></script</endfold id='6'>>
	<beginfold id='1'><!--</beginfold id='1'> JavaScript React <endfold id='1'>--></endfold id='1'>
	<beginfold id='6'><script</beginfold id='6'> type="text/babel">
		<beginfold id='91'><Hello</beginfold id='91'>> <?php echo("Hello, hello!"); ?> </Hello<endfold id='91'>></endfold id='91'> <?php <beginfold id='24'>/*</beginfold id='24'> aaa <endfold id='24'>*/</endfold id='24'> ?> <beginfold id='90'><div</beginfold id='90'>></div<endfold id='90'>></endfold id='90'>
		function a(i) <beginfold id='89'>{</beginfold id='89'>
			<?php echo "var j = 1;"; ?>
			return <beginfold id='90'><p</beginfold id='90'>><beginfold id='92'>{</beginfold id='92'> i + j <endfold id='92'>}</endfold id='92'></p<endfold id='90'>></endfold id='90'>;
		<endfold id='89'>}</endfold id='89'>
	<endfold id='6'></script</endfold id='6'>>
	<beginfold id='1'><!--</beginfold id='1'> TypeScript <endfold id='1'>--></endfold id='1'>
	<beginfold id='6'><script</beginfold id='6'> type="text/typescript">
		<?php $timestamp = time(); ?>
		class DateTime <beginfold id='93'>{</beginfold id='93'>
			info: string;
			constructor() <beginfold id='93'>{</beginfold id='93'> this.info = <?php echo(date("F d, Y h:i:s", $timestamp)); ?>; <endfold id='93'>}</endfold id='93'>
			get() <beginfold id='93'>{</beginfold id='93'> return this.info; <endfold id='93'>}</endfold id='93'>
		<endfold id='93'>}</endfold id='93'>
	<endfold id='6'></script</endfold id='6'>>
	<beginfold id='1'><!--</beginfold id='1'> MustacheJS <endfold id='1'>--></endfold id='1'>
	<beginfold id='6'><script</beginfold id='6'> type="x-tmpl-mustache">
		<beginfold id='99'>{{!</beginfold id='99'> <?php print "comment"; ?> <endfold id='99'>}}</endfold id='99'>
		<beginfold id='97'>{{#movie}}</beginfold id='97'>
			<beginfold id='103'><div</beginfold id='103'>>
				<beginfold id='103'><h1</beginfold id='103'>>{{title}}</h1<endfold id='103'>></endfold id='103'>
				<beginfold id='103'><img</beginfold id='103'> src="{{poster}}" alt="{{title}}"<endfold id='103'>/></endfold id='103'>
				<?php echo $movierating; ?> - {{ratings.critics_rating}}
			</div<endfold id='103'>></endfold id='103'>
		<endfold id='97'>{{/movie}}</endfold id='97'>
	<endfold id='6'></script</endfold id='6'>>

</html>

<?php
$var = <beginfold id='25'><<<DOOH</beginfold id='25'>
This is the $string inside the variable (which seems to be rendered as a string)
It works well, I think.
<endfold id='25'>DOOH</endfold id='25'>

# bug 382527
throw new ParserException("Test {$this->some_var[$index]}\nin {$this->file} is missing.\nThis is bad.");
?>
