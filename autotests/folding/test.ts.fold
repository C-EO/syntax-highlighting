/// <reference types="node" />

// TypeScript Test

class Student <beginfold id='1'>{</beginfold id='1'>
    fullName: string;
    constructor(public firstName: string, public middleInitial: string, public lastName: string) <beginfold id='1'>{</beginfold id='1'>
        this.fullName = firstName + " " + middleInitial + " " + lastName;
    <endfold id='1'>}</endfold id='1'>
<endfold id='1'>}</endfold id='1'>

interface Person <beginfold id='1'>{</beginfold id='1'>
    firstName: string;
    lastName: string;
<endfold id='1'>}</endfold id='1'>

function greeter(person : Person) <beginfold id='1'>{</beginfold id='1'>
    return "Hello, " + person.firstName + " " + person.lastName;
<endfold id='1'>}</endfold id='1'>

let user = new Student("Jane", "M.", "User");

document.body.innerHTML = greeter(user);
JSON.stringify()
console.log("Hello world");

import http = require<beginfold id='3'>(</beginfold id='3'>"http"<endfold id='3'>)</endfold id='3'>;
import path = require<beginfold id='3'>(</beginfold id='3'>"path"<endfold id='3'>)</endfold id='3'>;
import URL = url.URL;
import <beginfold id='1'>{</beginfold id='1'> Readable, Writable <endfold id='1'>}</endfold id='1'> from "stream";
import <beginfold id='1'>{</beginfold id='1'> isBuffer, isString, isObject <endfold id='1'>}</endfold id='1'> from "util";

const port = 8__88___8;
const baseUrl = new URL(`http://localhost:${port}/`);
const rootDir = path.dirname(__dirname);

const defaultBrowser = os.platform() === "win32" ? "edge" : "chrome";
let browser: "edge" | "chrome" | "none" = defaultBrowser;
let grep: string | undefined;

interface FileBasedTestConfiguration <beginfold id='1'>{</beginfold id='1'>
    <beginfold id='2'>[</beginfold id='2'>setting: string<endfold id='2'>]</endfold id='2'>: string;
<endfold id='1'>}</endfold id='1'>

function swapCase(s: string): string <beginfold id='1'>{</beginfold id='1'>
    return s.replace(/\w/g, (ch) => <beginfold id='1'>{</beginfold id='1'>
        const up = ch.toUpperCase();
        return ch === up ? ch.toLowerCase() : up;
    <endfold id='1'>}</endfold id='1'>);
<endfold id='1'>}</endfold id='1'>
