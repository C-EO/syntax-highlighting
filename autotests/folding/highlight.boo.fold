<indentfold><beginfold id='2'>"""</beginfold id='2'>module docstring<endfold id='2'>"""</endfold id='2'>

namespace My.NameSpace #optional namespace declaration

import Assembly.Reference #import statements

#followed by the Members of this module (classes, methods, etc.)
class MyClass:
    pass

def domyfunction<beginfold id='3'>(</beginfold id='3'>it<endfold id='3'>)</endfold id='3'>:
    print<beginfold id='3'>(</beginfold id='3'>it<endfold id='3'>)</endfold id='3'>

#start "main" section that is executed when script is run
x as int
x = 3
domyfunction<beginfold id='3'>(</beginfold id='3'>x<endfold id='3'>)</endfold id='3'>

#optional assembly attribute declarations used when compiling
[assembly: AssemblyTitle<beginfold id='3'>(</beginfold id='3'>'foo'<endfold id='3'>)</endfold id='3'>]
[assembly: AssemblyDescription<beginfold id='3'>(</beginfold id='3'>'bar'<endfold id='3'>)</endfold id='3'>]

import MyLibrary
print <beginfold id='3'>(</beginfold id='3'>Version<endfold id='3'>)</endfold id='3'>
doit<beginfold id='3'>(</beginfold id='3'><endfold id='3'>)</endfold id='3'>

[Module]
class MainClass:
    public static Version as string

    static def constructor<beginfold id='3'>(</beginfold id='3'><endfold id='3'>)</endfold id='3'>:
        Version = "0.1"

def doit<beginfold id='3'>(</beginfold id='3'><endfold id='3'>)</endfold id='3'>:
    #you can refer to "globals" from within your library, too:
    print<beginfold id='3'>(</beginfold id='3'>"This library's version is: "+MainClass.Version<endfold id='3'>)</endfold id='3'>

