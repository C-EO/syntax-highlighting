<Comment>#</Comment><Comment> comment with </Comment><Alert Level 1>ALERT</Alert Level 1><br/>
<Normal Text></Normal Text><br/>
<Comment>'''</Comment><Comment> multiline</Comment><br/>
<Comment>    comment</Comment><br/>
<Comment>    </Comment><Alert Level 3>###</Alert Level 3><br/>
<Comment>    '''</Comment><br/>
<Normal Text></Normal Text><br/>
<Operator>//</Operator><Normal Text> alert check, no word delimiter check at start of word, bug </Normal Text><Int>397719</Int><br/>
<Comment>#</Comment><Alert Level 2>TODO</Alert Level 2><br/>
<Normal Text></Normal Text><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Int> 100_000</Int><br/>
<Normal Text>b </Normal Text><Operator>=</Operator><Int> 856_264</Int><Normal Text>.</Normal Text><Int>65</Int><br/>
<Normal Text>c </Normal Text><Operator>=</Operator><Hex> 0x420_F52</Hex><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>def</Definition Keyword><Normal Text> func(x):</Normal Text><br/>
<Normal Text>    </Normal Text><Comment>"""</Comment><Comment> EXTENDED API docs """</Comment><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>if</Flow Control Keyword><Normal Text> x </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Int>42</Int><Normal Text>:</Normal Text><br/>
<Normal Text>        func()</Normal Text><br/>
<Normal Text>        c1 </Normal Text><Operator>=</Operator><Normal Text> {}</Normal Text><br/>
<Normal Text>        c2 </Normal Text><Operator>=</Operator><Normal Text> {</Normal Text><br/>
<Normal Text>            </Normal Text><Float>2.4</Float><Normal Text>,</Normal Text><br/>
<Normal Text>            </Normal Text><Hex>0x42</Hex><Normal Text>,</Normal Text><br/>
<Normal Text>            }</Normal Text><br/>
<Normal Text>        a1 </Normal Text><Operator>=</Operator><Normal Text> []</Normal Text><br/>
<Normal Text>        a2 </Normal Text><Operator>=</Operator><Normal Text> [</Normal Text><br/>
<Normal Text>            </Normal Text><String>"a"</String><Normal Text>, </Normal Text><Octal>032</Octal><Normal Text>, (</Normal Text><br/>
<Normal Text>                )]</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>else</Flow Control Keyword><Normal Text>:</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String>"""multi</String><br/>
<String>            line</String><br/>
<String>            string"""</String><Normal Text>)</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String>"single \</String><br/>
<String>                continued line "</String><Normal Text>)</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String>'single line'</String><Normal Text>)</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>return</Flow Control Keyword><Normal Text> </Normal Text><Builtin Function>float</Builtin Function><Normal Text>(</Normal Text><Builtin Function>len</Builtin Function><Normal Text>(a2))</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>def</Definition Keyword><Normal Text> test_f_literals():</Normal Text><br/>
<Normal Text>    </Normal Text><F-String>f'xy'</F-String><br/>
<Normal Text>    </Normal Text><F-String>f'x</F-String><String Substitution>{</String Substitution><Normal Text>bar</Normal Text><String Substitution>}</String Substitution><F-String>y'</F-String><br/>
<Normal Text>    </Normal Text><F-String>f'x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String>"baz"</String><Normal Text>]</Normal Text><String Substitution>}</String Substitution><F-String>y'</F-String><br/>
<Normal Text>    </Normal Text><F-String>f'x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String>"baz"</String><Normal Text>]</Normal Text><String Substitution>}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String>'</F-String><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><F-String>f'x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String>"baz"</String><Normal Text>]</Normal Text><String Substitution>!r}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String>'</F-String><br/>
<Normal Text>    </Normal Text><F-String>f'x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String>"baz"</String><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String>'</F-String><br/>
<Normal Text></Normal Text><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String>"Escapes in String </String><String Char>\U12345678</String Char><String> </String><String Char>\xAB</String Char><String> </String><String Char>\"</String Char><String>"</String><br/>
<Comment>"</Comment><Comment>Escapes in Doc/Comment String </Comment><String Char>\u1234</String Char><Comment> </Comment><String Char>\xAb</String Char><Comment> </Comment><String Char>\"\\</String Char><Comment>"</Comment><br/>
<Comment>'''</Comment><Comment> Doc/Comment String </Comment><String Char>\N{123}</String Char><Comment> </Comment><String Char>\'</String Char><Comment>'''</Comment><br/>
<Comment>"""</Comment><Comment> Doc/Comment String </Comment><String Char>\17</String Char><Comment> </Comment><String Char>\x1f</String Char><Comment> </Comment><String Char>\n</String Char><Comment> </Comment><String Char>\"</String Char><Comment> </Comment><String Char>\\</String Char><Comment>"""</Comment><br/>
