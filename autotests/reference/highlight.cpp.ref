<Preprocessor>#pragma once</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Preprocessor>#include </Preprocessor><Prep. Lib><cassert></Prep. Lib><br/>
<Preprocessor>#include </Preprocessor><Prep. Lib><assert.h></Prep. Lib><br/>
<Preprocessor>#include </Preprocessor><Prep. Lib>"assert.h"</Prep. Lib><br/>
<Preprocessor>#include </Preprocessor><Prep. Lib>"assert.hpp"</Prep. Lib><br/>
<Preprocessor>#include </Preprocessor><Prep. Lib>"path/assert.hpp"</Prep. Lib><br/>
<Preprocessor>#include PATH_IN_MACRO()</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Preprocessor>#define SOME_VAR 1</Preprocessor><br/>
<Preprocessor>#ifdef SOME_VAR</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Preprocessor>#define MULTILINE_MACRO one </Preprocessor><Separator Symbol>\</Separator Symbol><br/>
<Preprocessor>two </Preprocessor><Separator Symbol>\</Separator Symbol><br/>
<Preprocessor>three</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Preprocessor># define MULTILINE_MACRO_TEXT                        </Preprocessor><Separator Symbol>\</Separator Symbol><br/>
<Preprocessor>    /* NOTE The contents of macro is too green :D */ </Preprocessor><Separator Symbol>\</Separator Symbol><br/>
<Preprocessor>    char const s[] = "a</Preprocessor><Error>\\</Error><Preprocessor>b"                          </Preprocessor><Separator Symbol>\</Separator Symbol><br/>
<Preprocessor>    "c</Preprocessor><Error>\</Error><Preprocessor>nd"</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Preprocessor># error dds</Preprocessor><br/>
<Preprocessor># warning dds</Preprocessor><br/>
<Preprocessor># line 2 "file.cpp"</Preprocessor><br/>
<Preprocessor># define A(x, y) x##y x#y</Preprocessor><br/>
<Comment>// OK(L, a) -> L"a"</Comment><br/>
<Preprocessor># define OK(x, y) x###y</Preprocessor><br/>
<Preprocessor># define BAD(x, y) x####y</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> </Normal Text><Globals (g_*)>g_global</Globals (g_*)><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Keyword>template</Keyword><Symbol><</Symbol><Keyword>class</Keyword><Normal Text> T</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Keyword>typename</Keyword><Normal Text> U</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Keyword>template</Keyword><Symbol><</Symbol><Keyword>class</Keyword><Symbol>></Symbol><Normal Text> </Normal Text><Keyword>class</Keyword><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Standard Classes>std::is_pointer</Standard Classes><Symbol>></Symbol><br/>
<Keyword>struct</Keyword><Normal Text> class1</Normal Text><br/>
<Normal Text>  </Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Keyword>private</Keyword><Normal Text> </Normal Text><Standard Classes>std::vector</Standard Classes><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Keyword>public</Keyword><Normal Text> U</Normal Text><br/>
<Symbol>{</Symbol><br/>
<Normal Text>    class1</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>try</Control Flow><br/>
<Normal Text>        </Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Internals>_member1</Internals><Symbol>(</Symbol><Normal Text>xxx</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>{}</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>catch</Control Flow><Symbol>(...)</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>{}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Symbol>~</Symbol><Normal Text>class1</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>{}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Keyword>noexcept</Keyword><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Keyword>noexcept</Keyword><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Keyword>virtual</Keyword><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Keyword>noexcept</Keyword><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Keyword>constexpr</Keyword><Normal Text> </Normal Text><Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><br/>
<Normal Text>        </Normal Text><Keyword>noexcept</Keyword><Symbol>(</Symbol><Keyword>noexcept</Keyword><Symbol>(</Symbol><Standard Classes>std::is_pointer</Standard Classes><Symbol><</Symbol><Normal Text>U</Normal Text><Symbol>>::</Symbol><Normal Text>value</Normal Text><Symbol>))</Symbol><Normal Text> </Normal Text><Keyword>override</Keyword><br/>
<Normal Text>    </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        xxx</Normal Text><Symbol>::</Symbol><Keyword>template</Keyword><Normal Text> ttt</Normal Text><Symbol><</Symbol><Normal Text>U</Normal Text><Symbol>>::</Symbol><Normal Text>type </Normal Text><Symbol>{}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        xxx</Normal Text><Symbol>.</Symbol><Keyword>template</Keyword><Normal Text> get</Normal Text><Symbol><</Symbol><Normal Text>U</Normal Text><Symbol>>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        xxx</Normal Text><Symbol>.</Symbol><Standard Classes>std::rdbuf</Standard Classes><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        </Normal Text><Keyword>auto</Keyword><Normal Text> x </Normal Text><Symbol>=</Symbol><Normal Text> C</Normal Text><Symbol><</Symbol><Char>'a'</Char><Symbol>></Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> y</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Data Type>int</Data Type><Normal Text> </Normal Text><Keyword>operator</Keyword><Symbol>->*(</Symbol><Normal Text>T </Normal Text><Symbol>(</Symbol><Normal Text>C</Normal Text><Symbol>::*</Symbol><Normal Text>m</Normal Text><Symbol>)(</Symbol><Data Type>int</Data Type><Symbol>))</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Keyword>operator</Keyword><Normal Text> </Normal Text><Types (*_t/*_type)>value_t</Types (*_t/*_type)><Normal Text> </Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Keyword>private</Keyword><Symbol>:</Symbol><br/>
<Keyword>protected</Keyword><Symbol>:</Symbol><br/>
<Keyword>public</Keyword><Symbol>:</Symbol><br/>
<Normal Text>    </Normal Text><Types (*_t/*_type)>value_type</Types (*_t/*_type)><Normal Text> </Normal Text><Internals>_member1</Internals><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 3>NOTE</Alert Level 3><Comment> internal ?</Comment><br/>
<Normal Text>    </Normal Text><Types (*_t/*_type)>value_type</Types (*_t/*_type)><Normal Text> </Normal Text><Internals>__internal</Internals><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Types (*_t/*_type)>value_type</Types (*_t/*_type)><Normal Text> </Normal Text><Internals>internal__</Internals><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Types (*_t/*_type)>value_type</Types (*_t/*_type)><Normal Text> </Normal Text><Internals>_M_internal</Internals><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Types (*_t/*_type)>value_t</Types (*_t/*_type)><Normal Text> </Normal Text><Data Members (m_*)>member2_</Data Members (m_*)><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Types (*_t/*_type)>value_type</Types (*_t/*_type)><Normal Text> </Normal Text><Data Members (m_*)>m_member3</Data Members (m_*)><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> </Normal Text><Statics (s_*)>s_static</Statics (s_*)><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Keyword>constexpr</Keyword><Normal Text> </Normal Text><Keyword>struct</Keyword><Normal Text> </Normal Text><Symbol>:</Symbol><Normal Text> xyz</Normal Text><br/>
<Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Keyword>using</Keyword><Normal Text> xyz</Normal Text><Symbol>::</Symbol><Normal Text>xyz</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Keyword>using</Keyword><Normal Text> xyz</Normal Text><Symbol>::</Symbol><Keyword>operator</Keyword><Symbol>=</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Data Type>int</Data Type><Normal Text> a </Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Data Type>int</Data Type><Normal Text> b </Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Decimal>7</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><Normal Text> x </Normal Text><Symbol>{}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Keyword>template</Keyword><Symbol><</Symbol><Keyword>class</Keyword><Normal Text> T</Normal Text><Symbol>></Symbol><br/>
<Keyword>using</Keyword><Normal Text> is_pointer </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Standard Classes>std::is_pointer</Standard Classes><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>>::</Symbol><Normal Text>type</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Keyword>template</Keyword><Symbol><</Symbol><Keyword>class</Keyword><Normal Text> T</Normal Text><Symbol>></Symbol><br/>
<Keyword>constexpr</Keyword><Normal Text> </Normal Text><Keyword>auto</Keyword><Normal Text> is_pointer_v </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Standard Classes>std::is_pointer</Standard Classes><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>>::</Symbol><Normal Text>value</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Data Type>uint64_t</Data Type><Normal Text> namespaces</Normal Text><Symbol>()</Symbol><br/>
<Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Standard Classes>std::vector</Standard Classes><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Boost Stuff>boost::vector</Boost Stuff><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Internals>detail::vector</Internals><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Internals>details::vector</Internals><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Internals>aux::vector</Internals><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Internals>internals::vector</Internals><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    other</Normal Text><Symbol>::</Symbol><Normal Text>vector</Normal Text><Symbol><</Symbol><Normal Text>T</Normal Text><Symbol>></Symbol><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Preprocessor>#if 1</Preprocessor><br/>
<Normal Text>    </Normal Text><Data Type>double</Data Type><Normal Text> foo</Normal Text><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> A</Normal Text><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Preprocessor>#else</Preprocessor><br/>
<Comment>    double foo(const A);</Comment><br/>
<Preprocessor>#endif</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Preprocessor>#if 0</Preprocessor><br/>
<Comment>    double foo(const A);</Comment><br/>
<Preprocessor>#else</Preprocessor><br/>
<Normal Text>    </Normal Text><Data Type>double</Data Type><Normal Text> foo</Normal Text><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> A</Normal Text><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Preprocessor>#endif</Preprocessor><br/>
<dsNormal></dsNormal><br/>
<Data Type>int</Data Type><Normal Text> bar</Normal Text><Symbol>(</Symbol><Data Type>void</Data Type><Symbol>*</Symbol><Normal Text>p</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> </Normal Text><Symbol>*</Symbol><Normal Text> pp</Normal Text><Symbol>)</Symbol><br/>
<Symbol>{</Symbol><br/>
<Preprocessor># if 0</Preprocessor><br/>
<Comment>    double foo();</Comment><br/>
<Preprocessor># else</Preprocessor><br/>
<Normal Text>    </Normal Text><Data Type>double</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Preprocessor># endif</Preprocessor><br/>
<Symbol>}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>uint64_t</Data Type><Normal Text> intWithSuffix </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>42ull</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>long</Data Type><Normal Text> intWithSuffixAndPrefix </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Binary>0b0101L</Binary><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> octNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Octal>07232</Octal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> invalidOctNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>09231</Error><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>uint64_t</Data Type><Normal Text> hexNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0xDEADBEEF42</Hex><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>uint64_t</Data Type><Normal Text> invalidHexNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>0xGLDFKG</Error><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> binNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Binary>0b0101010</Binary><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int64_t</Data Type><Normal Text> intWithSuffix </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>-42LL</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>long</Data Type><Normal Text> intWithSuffixAndPrefix </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>-0b0101L</Error><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> octNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Octal>-07232</Octal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> invalidOctNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>-09231</Error><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int64_t</Data Type><Normal Text> hexNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>-0xDEADBEEF42</Hex><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int64_t</Data Type><Normal Text> invalidHexNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>-0xGLDFKG</Error><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> binNum </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>-0b0101010</Error><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>uint64_t</Data Type><Normal Text> intWithSuffixWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>4'2ull</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>long</Data Type><Normal Text> intWithSuffixAndPrefixWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Binary>0b0'10'1L</Binary><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> octNumWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Octal>07'232</Octal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> invalidOctNumWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>09</Error><Char>'23'</Char><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>uint64_t</Data Type><Normal Text> hexNumWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0xD'EAD'BE'EF'42</Hex><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>uint64_t</Data Type><Normal Text> invalidHexNumWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>0xGLD</Error><Char>'FKG;</Char><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> binNumWithSep </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Binary>0b0'1010'10</Binary><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d1 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>42.</Float><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d2 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>.42</Float><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d3 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>42.3e1</Float><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d4 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>.2e-12</Float><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d5 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>32.e+12</Float><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> invalidD1 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>32.</Float><Normal Text>e</Normal Text><Symbol>+</Symbol><Normal Text>a12</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>float</Data Type><Normal Text> floatQualifier </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>23.123f</Float><Separator Symbol>;</Separator Symbol><br/>
<Comment>// </Comment><Alert Level 2>TODO</Alert Level 2><Comment> c++17</Comment><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d6 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>0x1ffp10</Error><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d7 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Error>0X0p</Error><Decimal>-1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d8 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0x1</Hex><Symbol>.</Symbol><Normal Text>p0</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d9 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0xf</Hex><Symbol>.</Symbol><Normal Text>p</Normal Text><Decimal>-1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d10 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0x0</Hex><Symbol>.</Symbol><Error>123p</Error><Decimal>-1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> d11 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0xa</Hex><Symbol>.</Symbol><Normal Text>bp10l</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>double</Data Type><Normal Text> invalidD2 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0x0</Hex><Symbol>.</Symbol><Error>123p</Error><Symbol>-</Symbol><Normal Text>a</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>float</Data Type><Normal Text> floatQualifier </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0xf</Hex><Symbol>.</Symbol><Normal Text>p</Normal Text><Error>-1f</Error><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>bool</Data Type><Normal Text> yes </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Keyword>true</Keyword><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Data Type>bool</Data Type><Normal Text> no </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Keyword>false</Keyword><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<dsNormal></dsNormal><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> c1 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'c'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text>       c1a </Normal Text><Symbol>=</Symbol><Normal Text> u8</Normal Text><Char>'c'</Char><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>TODO</Alert Level 2><Comment> c++17</Comment><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char16_t</Data Type><Normal Text>   c1b </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>u'c'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char32_t</Data Type><Normal Text>   c1c </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>U'c'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>wchar_t</Data Type><Normal Text>    c1d </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>L'c'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> c2 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'</Char><String Char>\n</String Char><Char>'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> c2a </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'</Char><String Char>\120</String Char><Char>'</Char><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// octal</Comment><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> c2b </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'</Char><String Char>\x1f</String Char><Char>'</Char><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// hex</Comment><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> c2c </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'</Char><String Char>\'</String Char><Char>'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Normal Text> c2d </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'</Char><String Char>\\</String Char><Char>'</Char><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> c3 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>"string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> c4 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>"</String><String Char>\"</String Char><String>string</String><String Char>\n\t\012\x12\"</String Char><String>"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> c5 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>"multiline \</String><br/>
<String>    string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> c6 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>"multifragment"</String><Normal Text> </Normal Text><String>"other""string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text>      c6a </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>u8"string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char16_t</Data Type><Symbol>*</Symbol><Normal Text>  c6b </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>u"string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char32_t</Data Type><Symbol>*</Symbol><Normal Text>  c6c </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>U"string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>wchar_t</Data Type><Symbol>*</Symbol><Normal Text>   c6d </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>L"string"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> rawString1 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>R"(string)"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text>      rawString1a </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>u8R"(string)"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char16_t</Data Type><Symbol>*</Symbol><Normal Text>  rawString1b </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>uR"(string)"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char32_t</Data Type><Symbol>*</Symbol><Normal Text>  rawString1c </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>UR"(string)"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>wchar_t</Data Type><Symbol>*</Symbol><Normal Text>   rawString1d </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>LR"(string\nstring)"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> rawString2 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>R"ab(string\nstring)ab"</String><Separator Symbol>;</Separator Symbol><br/>
<Type Modifiers>static</Type Modifiers><Normal Text> </Normal Text><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*</Symbol><Normal Text> rawString3 </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>R"ab(string</String><br/>
<String>string)ab"</String><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Comment>// UDL (c++11)</Comment><br/>
<dsNormal></dsNormal><br/>
<Normal Text>operator</Normal Text><String>""_a</String><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><Comment> operator not colorized</Comment><br/>
<Keyword>operator</Keyword><Normal Text> </Normal Text><String>""_a</String><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><Comment> colorized or</Comment><br/>
<Keyword>operator</Keyword><Normal Text> </Normal Text><String>""</String><Normal Text> _a</Normal Text><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><Comment> or not colorized</Comment><br/>
<Error>operator "" a</Error><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Keyword>operator</Keyword><Normal Text> </Normal Text><String>""</String><Normal Text>a</Normal Text><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><br/>
<Normal Text>operator</Normal Text><String>""</String><Normal Text>a</Normal Text><Symbol>(</Symbol><Type Modifiers>const</Type Modifiers><Normal Text> </Normal Text><Data Type>char</Data Type><Symbol>*)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><br/>
<dsNormal></dsNormal><br/>
<String>"string"_s</String><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><Comment> colorized or</Comment><br/>
<String>"string"</String><Normal Text>s</Normal Text><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><Comment> or not colorized</Comment><br/>
<String>"string"_s-b</String><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment>// </Comment><Alert Level 2>BUG</Alert Level 2><br/>
<dsNormal></dsNormal><br/>
<Comment>// Macro</Comment><br/>
<dsNormal></dsNormal><br/>
<CONSTS/MACROS>MY_XXX</CONSTS/MACROS><Separator Symbol>;</Separator Symbol><br/>
<Boost Stuff>BOOST_XXX</Boost Stuff><Separator Symbol>;</Separator Symbol><br/>
<GNU Macros>__STDC_VERSION__</GNU Macros><Separator Symbol>;</Separator Symbol><br/>
<Standard Macros>__TIME__</Standard Macros><Separator Symbol>;</Separator Symbol><br/>
<GNU Macros>__cplusplus</GNU Macros><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Comment>// Attributes</Comment><br/>
<dsNormal></dsNormal><br/>
<Symbol>[[</Symbol><Standard Attribute>noreturn</Standard Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Symbol>[[</Symbol><Standard Attribute>deprecated</Standard Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Symbol>[[</Symbol><Standard Attribute>deprecated</Standard Attribute><Symbol>(</Symbol><String>"because"</String><Symbol>)]]</Symbol><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Data Type>void</Data Type><Normal Text> foo</Normal Text><Symbol>([[</Symbol><Standard Attribute>carries_dependency</Standard Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Data Type>int</Data Type><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Symbol>[[</Symbol><Attribute>opt</Attribute><Symbol>(</Symbol><Attribute>1</Attribute><Symbol>), </Symbol><Attribute>debug</Attribute><Symbol>]]</Symbol><br/>
<Symbol>[[</Symbol><Attribute>using</Attribute><Symbol> </Symbol><Attribute>CC:</Attribute><Symbol> </Symbol><Attribute>opt</Attribute><Symbol>(</Symbol><Attribute>1</Attribute><Symbol>), </Symbol><Attribute>debug</Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Comment>// c++17</Comment><br/>
<Symbol>[[</Symbol><Attribute>using</Attribute><Symbol> </Symbol><Attribute>CC:</Attribute><Symbol> </Symbol><Attribute>CC::opt</Attribute><Symbol>(</Symbol><Attribute>1</Attribute><Symbol>)]]</Symbol><Normal Text> </Normal Text><Comment>// c++17</Comment><br/>
<dsNormal></dsNormal><br/>
<Data Type>void</Data Type><Normal Text> f</Normal Text><Symbol>([[</Symbol><Attribute>maybe_unused</Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> val</Normal Text><Symbol>)</Symbol><br/>
<Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>[[</Symbol><Attribute>maybe_unused</Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Data Type>int</Data Type><Normal Text> x</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>switch</Control Flow><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>x </Normal Text><Symbol>=</Symbol><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> x</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>case</Control Flow><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>:</Symbol><br/>
<Normal Text>            </Normal Text><Symbol>[[</Symbol><Attribute>fallthrough</Attribute><Symbol>]]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>case</Control Flow><Normal Text> </Normal Text><CONSTS/MACROS>XXX</CONSTS/MACROS><Symbol>:</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>case</Control Flow><Normal Text> Class</Normal Text><Symbol>::</Symbol><Normal Text>foo</Normal Text><Symbol>():</Symbol><br/>
<Normal Text>            </Normal Text><Symbol>[[</Symbol><Attribute>fallthrough</Attribute><Symbol>]]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>default</Control Flow><Symbol>:</Symbol><br/>
<Normal Text>            </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Comment>// c++17: fold expression</Comment><br/>
<Normal Text>    </Normal Text><Symbol>(</Symbol><Normal Text>args </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Symbol>...</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Normal Text> </Normal Text><Symbol>*</Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Symbol>))</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>(</Symbol><Normal Text>v</Normal Text><Symbol>.</Symbol><Normal Text>push_back</Normal Text><Symbol>(</Symbol><Normal Text>args</Normal Text><Symbol>)</Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Symbol>...)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Symbol>[[</Symbol><Attribute>omp::parallel</Attribute><Symbol>]]</Symbol><Normal Text> </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Symbol>(</Symbol><Keyword>auto</Keyword><Symbol>&&</Symbol><Normal Text> x </Normal Text><Symbol>:</Symbol><Normal Text> v</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>        x</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Symbol>(</Symbol><Keyword>auto</Keyword><Symbol>&&</Symbol><Normal Text> </Normal Text><Symbol>[</Symbol><Normal Text>first</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text>second</Normal Text><Symbol>]</Symbol><Normal Text> </Normal Text><Symbol>:</Symbol><Normal Text> mymap</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Keyword>auto</Keyword><Normal Text> </Normal Text><Symbol>[</Symbol><Normal Text>x</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> y</Normal Text><Symbol>]</Symbol><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Symbol>[</Symbol><Normal Text>x </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text>y</Normal Text><Symbol>](){}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>    </Normal Text><Keyword>decltype</Keyword><Symbol>((</Symbol><Keyword>auto</Keyword><Symbol>))</Symbol><Normal Text> x </Normal Text><Symbol>=</Symbol><Normal Text> foo</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<dsNormal></dsNormal><br/>
<Keyword>auto</Keyword><Normal Text> f</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>-></Symbol><Normal Text> </Normal Text><Keyword>decltype</Keyword><Symbol>(</Symbol><Normal Text>foo</Normal Text><Symbol>())</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<GNU Extensions>__attribute__((pure))</GNU Extensions><Normal Text> </Normal Text><Data Type>void</Data Type><Normal Text> f</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<Normal Text>label</Normal Text><Symbol>:</Symbol><br/>
<Control Flow>goto</Control Flow><Normal Text> label</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<dsNormal></dsNormal><br/>
<dsNormal></dsNormal><br/>
<Region Marker>//BEGIN region</Region Marker><br/>
<Comment>// </Comment><Alert Level 2>TODO</Alert Level 2><Comment> comment </Comment><Alert Level 2>FIXME</Alert Level 2><Comment> comment </Comment><Alert Level 3>###</Alert Level 3><Comment> comment </Comment><Alert Level 2>BUG</Alert Level 2><Comment> comment</Comment><br/>
<Region Marker>//END region</Region Marker><br/>
<dsNormal></dsNormal><br/>
<Error>#wrong</Error><br/>
<dsNormal></dsNormal><br/>
<Comment>// \brief blah blah</Comment><br/>
<Comment>/// </Comment><Tags>\brief</Tags><Comment> blah blah</Comment><br/>
<dsNormal></dsNormal><br/>
<Comment>/**</Comment><br/>
<Comment> * Doxygen</Comment><br/>
<Comment> * </Comment><Tags>@param</Tags><Comment> </Comment><Word>p1</Word><Comment> text</Comment><br/>
<Comment> * </Comment><Tags>\brief</Tags><Comment> </Comment><HTML Tag><b></HTML Tag><Comment>bold text</Comment><HTML Tag></b></HTML Tag><br/>
<Comment> * </Comment><Tags>\dot</Tags><br/>
<Dot Graph> </Dot Graph><Comment>*</Comment><Dot Graph> a -> b</Dot Graph><br/>
<Dot Graph> </Dot Graph><Comment>*</Comment><Dot Graph> </Dot Graph><Tags>\enddot</Tags><br/>
<Comment> *</Comment><br/>
<Comment> * </Comment><Tags>\verbatim</Tags><br/>
<Verbatim> </Verbatim><Comment>*</Comment><Verbatim> <dummy></Verbatim><br/>
<Verbatim> </Verbatim><Comment>*</Comment><Verbatim> </Verbatim><Tags>\endverbatim</Tags><br/>
<Comment> * </Comment><HTML Tag><html></HTML Tag><Comment>text</Comment><HTML Tag></html></HTML Tag><br/>
<Comment> */</Comment><br/>
<dsNormal></dsNormal><br/>
<Preprocessor>#endif</Preprocessor><br/>
