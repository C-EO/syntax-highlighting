<Keyword>use</Keyword><Normal Text> </Normal Text><String>"cli"</String><br/>
<Keyword>use</Keyword><Normal Text> </Normal Text><String>"collections"</String><br/>
<Keyword>use</Keyword><Normal Text> </Normal Text><String>"files"</String><br/>
<Normal Text></Normal Text><br/>
<Keyword>actor</Keyword><Normal Text> </Normal Text><Data Type>Worker</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>new</Keyword><Normal Text> </Normal Text><Function>mandelbrot</Function><Symbol>(</Symbol><Normal Text>main</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Main</Data Type><Symbol>,</Symbol><Normal Text> x</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Symbol>,</Symbol><Normal Text> y</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Symbol>,</Symbol><Normal Text> width</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Symbol>,</Symbol><br/>
<Normal Text>    iterations</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Symbol>,</Symbol><Normal Text> limit</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>F32</Data Type><Symbol>,</Symbol><Normal Text> real</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Capability>val</Capability><Symbol>,</Symbol><br/>
<Normal Text>    imaginary</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Capability>val</Capability><Symbol>)</Symbol><br/>
<Normal Text>  </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    </Normal Text><Keyword>var</Keyword><Normal Text> view</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>U8</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Capability>iso</Capability><Normal Text> </Normal Text><Symbol>=</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>recover</Control Flow><br/>
<Normal Text>        </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>U8</Data Type><Symbol>]((</Symbol><Normal Text>y </Normal Text><Symbol>-</Symbol><Normal Text> x</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>*</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>width </Normal Text><Symbol>>></Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>))</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Keyword>let</Keyword><Normal Text> group_r </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>].></Symbol><Normal Text>undefined</Normal Text><Symbol>(</Symbol><Decimal>8</Decimal><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Keyword>let</Keyword><Normal Text> group_i </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>].></Symbol><Normal Text>undefined</Normal Text><Symbol>(</Symbol><Decimal>8</Decimal><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Keyword>var</Keyword><Normal Text> row </Normal Text><Symbol>=</Symbol><Normal Text> x</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Control Flow>try</Control Flow><br/>
<Normal Text>      </Normal Text><Control Flow>while</Control Flow><Normal Text> row </Normal Text><Symbol><</Symbol><Normal Text> y </Normal Text><Control Flow>do</Control Flow><br/>
<Normal Text>        </Normal Text><Keyword>let</Keyword><Normal Text> prefetch_i </Normal Text><Symbol>=</Symbol><Normal Text> imaginary</Normal Text><Symbol>(</Symbol><Normal Text>row</Normal Text><Symbol>)?</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>        </Normal Text><Keyword>var</Keyword><Normal Text> col</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text></Normal Text><br/>
<Normal Text>        </Normal Text><Control Flow>while</Control Flow><Normal Text> col </Normal Text><Symbol><</Symbol><Normal Text> width </Normal Text><Control Flow>do</Control Flow><br/>
<Normal Text>          </Normal Text><Keyword>var</Keyword><Normal Text> j</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text></Normal Text><br/>
<Normal Text>          </Normal Text><Control Flow>while</Control Flow><Normal Text> j </Normal Text><Symbol><</Symbol><Normal Text> </Normal Text><Decimal>8</Decimal><Normal Text> </Normal Text><Control Flow>do</Control Flow><br/>
<Normal Text>            group_r</Normal Text><Symbol>.</Symbol><Normal Text>update</Normal Text><Symbol>(</Symbol><Normal Text>j</Normal Text><Symbol>,</Symbol><Normal Text> real</Normal Text><Symbol>(</Symbol><Normal Text>col </Normal Text><Symbol>+</Symbol><Normal Text> j</Normal Text><Symbol>)?)?</Symbol><br/>
<Normal Text>            group_i</Normal Text><Symbol>.</Symbol><Normal Text>update</Normal Text><Symbol>(</Symbol><Normal Text>j</Normal Text><Symbol>,</Symbol><Normal Text> prefetch_i</Normal Text><Symbol>)?</Symbol><br/>
<Normal Text>            j </Normal Text><Symbol>=</Symbol><Normal Text> j </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><br/>
<Normal Text>          </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>          </Normal Text><Keyword>var</Keyword><Normal Text> bitmap</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>U8</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0xFF</Hex><br/>
<Normal Text>          </Normal Text><Keyword>var</Keyword><Normal Text> n </Normal Text><Symbol>=</Symbol><Normal Text> iterations</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>          </Normal Text><Control Flow>repeat</Control Flow><br/>
<Normal Text>            </Normal Text><Keyword>var</Keyword><Normal Text> mask</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>U8</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Hex>0x80</Hex><br/>
<Normal Text>            </Normal Text><Keyword>var</Keyword><Normal Text> k</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text></Normal Text><br/>
<Normal Text>            </Normal Text><Control Flow>while</Control Flow><Normal Text> k </Normal Text><Symbol><</Symbol><Normal Text> </Normal Text><Decimal>8</Decimal><Normal Text> </Normal Text><Control Flow>do</Control Flow><br/>
<Normal Text>              </Normal Text><Keyword>let</Keyword><Normal Text> r </Normal Text><Symbol>=</Symbol><Normal Text> group_r</Normal Text><Symbol>(</Symbol><Normal Text>k</Normal Text><Symbol>)?</Symbol><br/>
<Normal Text>              </Normal Text><Keyword>let</Keyword><Normal Text> i </Normal Text><Symbol>=</Symbol><Normal Text> group_i</Normal Text><Symbol>(</Symbol><Normal Text>k</Normal Text><Symbol>)?</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>              group_r</Normal Text><Symbol>.</Symbol><Normal Text>update</Normal Text><Symbol>(</Symbol><Normal Text>k</Normal Text><Symbol>,</Symbol><Normal Text> </Normal Text><Symbol>((</Symbol><Normal Text>r </Normal Text><Symbol>*</Symbol><Normal Text> r</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>i </Normal Text><Symbol>*</Symbol><Normal Text> i</Normal Text><Symbol>))</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> real</Normal Text><Symbol>(</Symbol><Normal Text>col </Normal Text><Symbol>+</Symbol><Normal Text> k</Normal Text><Symbol>)?)?</Symbol><br/>
<Normal Text>              group_i</Normal Text><Symbol>.</Symbol><Normal Text>update</Normal Text><Symbol>(</Symbol><Normal Text>k</Normal Text><Symbol>,</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Float>2.0</Float><Normal Text> </Normal Text><Symbol>*</Symbol><Normal Text> r </Normal Text><Symbol>*</Symbol><Normal Text> i</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> prefetch_i</Normal Text><Symbol>)?</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>              </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Symbol>((</Symbol><Normal Text>r </Normal Text><Symbol>*</Symbol><Normal Text> r</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>i </Normal Text><Symbol>*</Symbol><Normal Text> i</Normal Text><Symbol>))</Symbol><Normal Text> </Normal Text><Symbol>></Symbol><Normal Text> limit </Normal Text><Control Flow>then</Control Flow><br/>
<Normal Text>                bitmap </Normal Text><Symbol>=</Symbol><Normal Text> bitmap </Normal Text><Symbol>and</Symbol><Normal Text> </Normal Text><Symbol>not</Symbol><Normal Text> mask</Normal Text><br/>
<Normal Text>              </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>              mask </Normal Text><Symbol>=</Symbol><Normal Text> mask </Normal Text><Symbol>>></Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><br/>
<Normal Text>              k </Normal Text><Symbol>=</Symbol><Normal Text> k </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><br/>
<Normal Text>            </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>          </Normal Text><Control Flow>until</Control Flow><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>bitmap </Normal Text><Symbol>==</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>or</Symbol><Normal Text> </Normal Text><Symbol>((</Symbol><Normal Text>n </Normal Text><Symbol>=</Symbol><Normal Text> n </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>==</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>          view</Normal Text><Symbol>.</Symbol><Normal Text>push</Normal Text><Symbol>(</Symbol><Normal Text>bitmap</Normal Text><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>          col </Normal Text><Symbol>=</Symbol><Normal Text> col </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Decimal>8</Decimal><br/>
<Normal Text>        </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>        row </Normal Text><Symbol>=</Symbol><Normal Text> row </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><br/>
<Normal Text>      </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>      main</Normal Text><Symbol>.</Symbol><Normal Text>draw</Normal Text><Symbol>(</Symbol><Normal Text>x </Normal Text><Symbol>*</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>width </Normal Text><Symbol>>></Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>),</Symbol><Normal Text> </Normal Text><Keyword>consume</Keyword><Normal Text> view</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Keyword>class</Keyword><Normal Text> </Normal Text><Capability>val</Capability><Normal Text> </Normal Text><Data Type>Config</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>let</Keyword><Normal Text> iterations</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>let</Keyword><Normal Text> limit</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>F32</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>let</Keyword><Normal Text> chunks</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>let</Keyword><Normal Text> width</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>let</Keyword><Normal Text> outpath</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Data Type>FilePath</Data Type><Normal Text> </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Data Type>None</Data Type><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>  </Normal Text><Keyword>new</Keyword><Normal Text> </Normal Text><Capability>val</Capability><Normal Text> </Normal Text><Overloaders>create</Overloaders><Symbol>(</Symbol><Normal Text>env</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Env</Data Type><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>?</Symbol><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    </Normal Text><Keyword>let</Keyword><Normal Text> cs </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>CommandSpec</Data Type><Symbol>.</Symbol><Normal Text>leaf</Normal Text><Symbol>(</Symbol><String>"gups_opt"</String><Symbol>,</Symbol><br/>
<Normal Text>      </Normal Text><String>"""</String><br/>
<String>      The binary output can be converted to a PNG with the following command</String><br/>
<String>      (ImageMagick Tools required):</String><br/>
<String></String><br/>
<String>        convert <output> PNG:<output>.png"""</String><Symbol>,</Symbol><br/>
<Normal Text>      </Normal Text><Symbol>[</Symbol><br/>
<Normal Text>      </Normal Text><Data Type>OptionSpec</Data Type><Symbol>.</Symbol><Normal Text>i64</Normal Text><Symbol>(</Symbol><String>"iterations"</String><Symbol>,</Symbol><br/>
<Normal Text>        </Normal Text><String>"Maximum amount of iterations to be done for each pixel."</String><br/>
<Normal Text>        </Normal Text><Keyword>where</Keyword><Normal Text> short' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'i'</Char><Symbol>,</Symbol><Normal Text> default' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>50</Decimal><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Data Type>OptionSpec</Data Type><Symbol>.</Symbol><Normal Text>f64</Normal Text><Symbol>(</Symbol><String>"limit"</String><Symbol>,</Symbol><br/>
<Normal Text>        </Normal Text><String>"Square of the limit that pixels need to exceed in order to escape from the Mandelbrot set."</String><br/>
<Normal Text>        </Normal Text><Keyword>where</Keyword><Normal Text> short' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'l'</Char><Symbol>,</Symbol><Normal Text> default' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>4.0</Float><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Data Type>OptionSpec</Data Type><Symbol>.</Symbol><Normal Text>i64</Normal Text><Symbol>(</Symbol><String>"chunks"</String><Symbol>,</Symbol><br/>
<Normal Text>        </Normal Text><String>"Maximum line count of chunks the image should be divided into for divide & conquer processing."</String><br/>
<Normal Text>        </Normal Text><Keyword>where</Keyword><Normal Text> short' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'c'</Char><Symbol>,</Symbol><Normal Text> default' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>16</Decimal><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Data Type>OptionSpec</Data Type><Symbol>.</Symbol><Normal Text>i64</Normal Text><Symbol>(</Symbol><String>"width"</String><Symbol>,</Symbol><br/>
<Normal Text>        </Normal Text><String>"Lateral length of the resulting mandelbrot image."</String><br/>
<Normal Text>        </Normal Text><Keyword>where</Keyword><Normal Text> short' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'w'</Char><Symbol>,</Symbol><Normal Text> default' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>16000</Decimal><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Data Type>OptionSpec</Data Type><Symbol>.</Symbol><Normal Text>string</Normal Text><Symbol>(</Symbol><String>"output"</String><Symbol>,</Symbol><br/>
<Normal Text>        </Normal Text><String>"File to write the output to."</String><br/>
<Normal Text>        </Normal Text><Keyword>where</Keyword><Normal Text> short' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Char>'o'</Char><Symbol>,</Symbol><Normal Text> default' </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><String>""</String><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>])?.></Symbol><Normal Text>add_help</Normal Text><Symbol>()?</Symbol><br/>
<Normal Text>    </Normal Text><Keyword>let</Keyword><Normal Text> cmd </Normal Text><Symbol>=</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>match</Control Flow><Normal Text> </Normal Text><Data Type>CommandParser</Data Type><Symbol>(</Symbol><Normal Text>cs</Normal Text><Symbol>).</Symbol><Normal Text>parse</Normal Text><Symbol>(</Symbol><Normal Text>env</Normal Text><Symbol>.</Symbol><Normal Text>args</Normal Text><Symbol>,</Symbol><Normal Text> env</Normal Text><Symbol>.</Symbol><Normal Text>vars</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Keyword>let</Keyword><Normal Text> c</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Command</Data Type><Normal Text> </Normal Text><Symbol>=></Symbol><Normal Text> c</Normal Text><br/>
<Normal Text>      </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Keyword>let</Keyword><Normal Text> ch</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>CommandHelp</Data Type><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>        ch</Normal Text><Symbol>.</Symbol><Normal Text>print_help</Normal Text><Symbol>(</Symbol><Normal Text>env</Normal Text><Symbol>.</Symbol><Normal Text>out</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>        env</Normal Text><Symbol>.</Symbol><Normal Text>exitcode</Normal Text><Symbol>(</Symbol><Decimal>0</Decimal><Symbol>)</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>error</Control Flow><br/>
<Normal Text>      </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Keyword>let</Keyword><Normal Text> se</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>SyntaxError</Data Type><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>        env</Normal Text><Symbol>.</Symbol><Normal Text>out</Normal Text><Symbol>.</Symbol><Normal Text>print</Normal Text><Symbol>(</Symbol><Normal Text>se</Normal Text><Symbol>.</Symbol><Normal Text>string</Normal Text><Symbol>())</Symbol><br/>
<Normal Text>        env</Normal Text><Symbol>.</Symbol><Normal Text>exitcode</Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Symbol>)</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>error</Control Flow><br/>
<Normal Text>      </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>    iterations </Normal Text><Symbol>=</Symbol><Normal Text> cmd</Normal Text><Symbol>.</Symbol><Normal Text>option</Normal Text><Symbol>(</Symbol><String>"iterations"</String><Symbol>).</Symbol><Normal Text>i64</Normal Text><Symbol>().</Symbol><Normal Text>usize</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    limit </Normal Text><Symbol>=</Symbol><Normal Text> cmd</Normal Text><Symbol>.</Symbol><Normal Text>option</Normal Text><Symbol>(</Symbol><String>"limit"</String><Symbol>).</Symbol><Normal Text>f64</Normal Text><Symbol>().</Symbol><Normal Text>f32</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    chunks </Normal Text><Symbol>=</Symbol><Normal Text> cmd</Normal Text><Symbol>.</Symbol><Normal Text>option</Normal Text><Symbol>(</Symbol><String>"chunks"</String><Symbol>).</Symbol><Normal Text>i64</Normal Text><Symbol>().</Symbol><Normal Text>usize</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    width </Normal Text><Symbol>=</Symbol><Normal Text> cmd</Normal Text><Symbol>.</Symbol><Normal Text>option</Normal Text><Symbol>(</Symbol><String>"width"</String><Symbol>).</Symbol><Normal Text>i64</Normal Text><Symbol>().</Symbol><Normal Text>usize</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    outpath </Normal Text><Symbol>=</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>try</Control Flow><br/>
<Normal Text>        </Normal Text><Data Type>FilePath</Data Type><Symbol>(</Symbol><Normal Text>env</Normal Text><Symbol>.</Symbol><Normal Text>root </Normal Text><Keyword>as</Keyword><Normal Text> </Normal Text><Data Type>AmbientAuth</Data Type><Symbol>,</Symbol><Normal Text> cmd</Normal Text><Symbol>.</Symbol><Normal Text>option</Normal Text><Symbol>(</Symbol><String>"output"</String><Symbol>).</Symbol><Normal Text>string</Normal Text><Symbol>())?</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>else</Control Flow><br/>
<Normal Text>        </Normal Text><Data Type>None</Data Type><br/>
<Normal Text>      </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>  </Normal Text><Keyword>new</Keyword><Normal Text> </Normal Text><Capability>val</Capability><Normal Text> </Normal Text><Function>none</Function><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    iterations </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>    limit </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>    chunks </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>    width </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>    outpath </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>None</Data Type><br/>
<Normal Text></Normal Text><br/>
<Keyword>actor</Keyword><Normal Text> </Normal Text><Data Type>Main</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>let</Keyword><Normal Text> c</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Config</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>var</Keyword><Normal Text> outfile</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Data Type>File</Data Type><Normal Text> </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Data Type>None</Data Type><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>None</Data Type><br/>
<Normal Text>  </Normal Text><Keyword>var</Keyword><Normal Text> actors</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>  </Normal Text><Keyword>var</Keyword><Normal Text> header</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>  </Normal Text><Keyword>var</Keyword><Normal Text> real</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Capability>val</Capability><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Control Flow>recover</Control Flow><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>  </Normal Text><Keyword>var</Keyword><Normal Text> imaginary</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Capability>val</Capability><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Control Flow>recover</Control Flow><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>  </Normal Text><Keyword>new</Keyword><Normal Text> </Normal Text><Overloaders>create</Overloaders><Symbol>(</Symbol><Normal Text>env</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Env</Data Type><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>try</Control Flow><br/>
<Normal Text>      c </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>Config</Data Type><Symbol>(</Symbol><Normal Text>env</Normal Text><Symbol>)?</Symbol><br/>
<Normal Text>      outfile </Normal Text><Symbol>=</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>match</Control Flow><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>outpath</Normal Text><br/>
<Normal Text>        </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Keyword>let</Keyword><Normal Text> fp</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>FilePath</Data Type><Normal Text> </Normal Text><Symbol>=></Symbol><Normal Text> </Normal Text><Data Type>File</Data Type><Symbol>(</Symbol><Normal Text>fp</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>else</Control Flow><br/>
<Normal Text>          </Normal Text><Data Type>None</Data Type><br/>
<Normal Text>        </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>      </Normal Text><Keyword>let</Keyword><Normal Text> length </Normal Text><Symbol>=</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><br/>
<Normal Text>      </Normal Text><Keyword>let</Keyword><Normal Text> recip_width </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Float>2.0</Float><Normal Text> </Normal Text><Symbol>/</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><Symbol>.</Symbol><Normal Text>f32</Normal Text><Symbol>()</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>      </Normal Text><Keyword>var</Keyword><Normal Text> r </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Control Flow>recover</Control Flow><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>](</Symbol><Normal Text>length</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>      </Normal Text><Keyword>var</Keyword><Normal Text> i </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Control Flow>recover</Control Flow><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>F32</Data Type><Symbol>](</Symbol><Normal Text>length</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>      </Normal Text><Control Flow>for</Control Flow><Normal Text> j </Normal Text><Keyword>in</Keyword><Normal Text> </Normal Text><Data Type>Range</Data Type><Symbol>(</Symbol><Decimal>0</Decimal><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Control Flow>do</Control Flow><br/>
<Normal Text>        r</Normal Text><Symbol>.</Symbol><Normal Text>push</Normal Text><Symbol>((</Symbol><Normal Text>recip_width </Normal Text><Symbol>*</Symbol><Normal Text> j</Normal Text><Symbol>.</Symbol><Normal Text>f32</Normal Text><Symbol>())</Symbol><Normal Text> </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Float>1.5</Float><Symbol>)</Symbol><br/>
<Normal Text>        i</Normal Text><Symbol>.</Symbol><Normal Text>push</Normal Text><Symbol>((</Symbol><Normal Text>recip_width </Normal Text><Symbol>*</Symbol><Normal Text> j</Normal Text><Symbol>.</Symbol><Normal Text>f32</Normal Text><Symbol>())</Symbol><Normal Text> </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Float>1.0</Float><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>      real </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Keyword>consume</Keyword><Normal Text> r</Normal Text><br/>
<Normal Text>      imaginary </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Keyword>consume</Keyword><Normal Text> i</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>      spawn_actors</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>      create_outfile</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>    c </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Data Type>Config</Data Type><Symbol>.</Symbol><Normal Text>none</Normal Text><Symbol>()</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>  </Normal Text><Keyword>be</Keyword><Normal Text> </Normal Text><Function>draw</Function><Symbol>(</Symbol><Normal Text>offset</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Symbol>,</Symbol><Normal Text> pixels</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>Array</Data Type><Symbol>[</Symbol><Data Type>U8</Data Type><Symbol>]</Symbol><Normal Text> </Normal Text><Capability>val</Capability><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>match</Control Flow><Normal Text> outfile</Normal Text><br/>
<Normal Text>    </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Keyword>let</Keyword><Normal Text> out</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>File</Data Type><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>      out</Normal Text><Symbol>.</Symbol><Normal Text>seek_start</Normal Text><Symbol>(</Symbol><Normal Text>header </Normal Text><Symbol>+</Symbol><Normal Text> offset</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>      out</Normal Text><Symbol>.</Symbol><Normal Text>write</Normal Text><Symbol>(</Symbol><Normal Text>pixels</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>actors </Normal Text><Symbol>=</Symbol><Normal Text> actors </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>==</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Control Flow>then</Control Flow><br/>
<Normal Text>        out</Normal Text><Symbol>.</Symbol><Normal Text>dispose</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>      </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text>    </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>  </Normal Text><Keyword>fun</Keyword><Normal Text> </Normal Text><Capability>ref</Capability><Normal Text> </Normal Text><Function>create_outfile</Function><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>match</Control Flow><Normal Text> outfile</Normal Text><br/>
<Normal Text>    </Normal Text><Symbol>|</Symbol><Normal Text> </Normal Text><Keyword>let</Keyword><Normal Text> f</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>File</Data Type><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>      f</Normal Text><Symbol>.</Symbol><Normal Text>print</Normal Text><Symbol>(</Symbol><String>"P4</String><Special Char>\n</Special Char><String> "</String><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><Symbol>.</Symbol><Normal Text>string</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><String>" "</String><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><Symbol>.</Symbol><Normal Text>string</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><String>"</String><Special Char>\n</Special Char><String>"</String><Symbol>)</Symbol><br/>
<Normal Text>      header </Normal Text><Symbol>=</Symbol><Normal Text> f</Normal Text><Symbol>.</Symbol><Normal Text>size</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>      f</Normal Text><Symbol>.</Symbol><Normal Text>set_length</Normal Text><Symbol>((</Symbol><Normal Text>c</Normal Text><Symbol>.</Symbol><Normal Text>width </Normal Text><Symbol>*</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>c</Normal Text><Symbol>.</Symbol><Normal Text>width </Normal Text><Symbol>>></Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>))</Symbol><Normal Text> </Normal Text><Symbol>+</Symbol><Normal Text> header</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>  </Normal Text><Keyword>fun</Keyword><Normal Text> </Normal Text><Capability>ref</Capability><Normal Text> </Normal Text><Function>spawn_actors</Function><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>=></Symbol><br/>
<Normal Text>    actors </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Symbol>((</Symbol><Normal Text>c</Normal Text><Symbol>.</Symbol><Normal Text>width </Normal Text><Symbol>+</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text>c</Normal Text><Symbol>.</Symbol><Normal Text>chunks </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>))</Symbol><Normal Text> </Normal Text><Symbol>/</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>chunks</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Keyword>var</Keyword><Normal Text> rest </Normal Text><Symbol>=</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width </Normal Text><Symbol>%</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>chunks</Normal Text><br/>
<Normal Text>    </Normal Text><Control Flow>if</Control Flow><Normal Text> rest </Normal Text><Symbol>==</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><Normal Text> </Normal Text><Control Flow>then</Control Flow><Normal Text> rest </Normal Text><Symbol>=</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>chunks </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Keyword>var</Keyword><Normal Text> x</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text>    </Normal Text><Keyword>var</Keyword><Normal Text> y</Normal Text><Symbol>:</Symbol><Normal Text> </Normal Text><Data Type>USize</Data Type><Normal Text> </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Decimal>0</Decimal><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Control Flow>for</Control Flow><Normal Text> i </Normal Text><Keyword>in</Keyword><Normal Text> </Normal Text><Data Type>Range</Data Type><Symbol>(</Symbol><Decimal>0</Decimal><Symbol>,</Symbol><Normal Text> actors </Normal Text><Symbol>-</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Control Flow>do</Control Flow><br/>
<Normal Text>      x </Normal Text><Symbol>=</Symbol><Normal Text> i </Normal Text><Symbol>*</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>chunks</Normal Text><br/>
<Normal Text>      y </Normal Text><Symbol>=</Symbol><Normal Text> x </Normal Text><Symbol>+</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>chunks</Normal Text><br/>
<Normal Text>      </Normal Text><Data Type>Worker</Data Type><Symbol>.</Symbol><Normal Text>mandelbrot</Normal Text><Symbol>(</Symbol><Keyword>this</Keyword><Symbol>,</Symbol><Normal Text> x</Normal Text><Symbol>,</Symbol><Normal Text> y</Normal Text><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>iterations</Normal Text><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>limit</Normal Text><Symbol>,</Symbol><Normal Text> real</Normal Text><Symbol>,</Symbol><Normal Text> imaginary</Normal Text><Symbol>)</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>end</Control Flow><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Data Type>Worker</Data Type><Symbol>.</Symbol><Normal Text>mandelbrot</Normal Text><Symbol>(</Symbol><Keyword>this</Keyword><Symbol>,</Symbol><Normal Text> y</Normal Text><Symbol>,</Symbol><Normal Text> y </Normal Text><Symbol>+</Symbol><Normal Text> rest</Normal Text><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>width</Normal Text><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>iterations</Normal Text><Symbol>,</Symbol><Normal Text> c</Normal Text><Symbol>.</Symbol><Normal Text>limit</Normal Text><Symbol>,</Symbol><Normal Text> real</Normal Text><Symbol>,</Symbol><br/>
<Normal Text>      imaginary</Normal Text><Symbol>)</Symbol><br/>
