<error>This is wrong but should not crash ] ) } !</error><br/>
<plain></plain><br/>
<comment># comment</comment><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>BR2_PACKAGE_GAMMARAY</symbolVar><br/>
<plain>        </plain><type>bool</type><plain> </plain><quotedPrompt>"gammaray"</quotedPrompt><br/>
<plain>        </plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>BR2_PACKAGE_QT5</symbolVar><br/>
<plain>        </plain><property>help</property><br/>
<helpText>          GammaRay Qt introspection probe.</helpText><br/>
<helpText>          second line of help, with correct indentation</helpText><br/>
<helpText></helpText><br/>
<helpText>          GammaRay Qt introspection probe.</helpText><br/>
<helpText>          second line of help, with correct indentation</helpText><br/>
<helpText>         </helpText><error>third line underindented and thus wrong</error><br/>
<plain>        </plain><property>default</property><plain> </plain><symbolConst>'true'</symbolConst><br/>
<keyword>config</keyword><plain> </plain><symbolVar>W1_MASTER_GPIO_CUSTOM</symbolVar><br/>
<plain>	</plain><type>tristate</type><plain> </plain><quotedPrompt>"Custom GPIO-based W1 driver"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>GENERIC_GPIO</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>W1_GPIOconfig</symbolVar><plain> </plain><error>AG71XX</error><br/>
<plain>	</plain><type>tristate</type><plain> </plain><quotedPrompt>"Atheros AR7XXX/AR9XXX built-in ethernet mac support"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ATH79</symbolVar><br/>
<plain>	</plain><property>imply</property><plain> </plain><symbolVar>HAS_TXX9_SERIAL</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><symbolVar>LD_VERSION</symbolVar><plain> </plain><exprOp>>=</exprOp><plain> </plain><symbolVar>225000000</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>LD_IS_LLD</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>PHYLIB</symbolVar><br/>
<plain>	</plain><property>---help---</property><br/>
<helpText>	  If you wish to compile a kernel for AR7XXX/91XXX and enable</helpText><br/>
<helpText>	  ethernet support, then you should always answer Y to this.</helpText><br/>
<helpText></helpText><br/>
<keyword>comment</keyword><plain> </plain><quotedPrompt>"module support disabled"</quotedPrompt><br/>
<plain>    </plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><exprOp>!</exprOp><symbolVar>MODULES</symbolVar><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><unquotedPrompt>myMenu</unquotedPrompt><br/>
<plain>      </plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>NET</symbolVar><br/>
<keyword>config</keyword><plain> </plain><symbolVar>NETDEVICES</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Atheros AR71xx built-in ethernet driver debugging"</quotedPrompt><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><symbolVar>ds</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Atheros AR71xx built-in ethernet driver debugging messages.</helpText><br/>
<keyword>endmenu</keyword><br/>
<keyword>if</keyword><plain> </plain><symbolVar>TARGET_OX820</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>SYS_CPU</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"arm1136"</symbolConst><br/>
<plain></plain><br/>
<keyword>endif</keyword><br/>
<plain></plain><br/>
<keyword>if</keyword><plain> </plain><symbolVar>AG71XX</symbolVar><br/>
<keyword>config</keyword><plain> </plain><symbolVar>AG71XX_DEBUG</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Atheros AR71xx built-in ethernet driver debugging"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Atheros AR71xx built-in ethernet driver debugging messages.</helpText><br/>
<keyword>endif</keyword><br/>
<plain></plain><br/>
<comment># comment</comment><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"System setup"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>choice</keyword><br/>
<plain>	</plain><property>prompt</property><plain> </plain><quotedPrompt>"Alpha system type"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><badType>string</badType><plain> </plain><quotedPrompt>"bad"</quotedPrompt><br/>
<plain>	</plain><property>---help---</property><br/>
<helpText>	  This is the system type of your hardware.</helpText><br/>
<helpText></helpText><br/>
<helpText>	</helpText><keyword>config</keyword><plain> </plain><symbolVar>HZ_32</symbolVar><br/>
<plain>		</plain><type>bool</type><plain> </plain><quotedPrompt>"32 Hz"</quotedPrompt><br/>
<plain>	</plain><keyword>config</keyword><plain> </plain><symbolVar>HZ_64</symbolVar><br/>
<plain>		</plain><type>bool</type><plain> </plain><quotedPrompt>"64 Hz"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Generic"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>TTY</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>HAVE_EISA</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>GENERIC_BUG_RELATIVE_POINTERS</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>X86_64</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"64-bit kernel"</quotedPrompt><plain> </plain><keyword>if</keyword><plain> </plain><symbolConst>"$(SUBARCH)"</symbolConst><plain> </plain><exprOp>=</exprOp><plain> </plain><symbolConst>"x86"</symbolConst><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Support the legacy </quotedPrompt><escapeQuotedPrompt>\"</escapeQuotedPrompt><quotedPrompt>mmu-masters</quotedPrompt><escapeQuotedPrompt>\"</escapeQuotedPrompt><quotedPrompt> devicetree bindings"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ARM_SMMU</symbolVar><exprOp>=</exprOp><tristateConst>y</tristateConst><plain> </plain><exprOp>&&</exprOp><plain> </plain><symbolVar>OF</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  A generic kernel will run on all supported Alpha hardware.</helpText><br/>
<helpText></helpText><br/>
<keyword>endchoice</keyword><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>VGA_HOSE</symbolVar><br/>
<plain>	</plain><type>bool</type><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><tristateConst>y</tristateConst><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>VGA_CONSOLE</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>(</exprOp><symbolVar>ALPHA_GENERIC</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_TITAN</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_MARVEL</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_TSUNAMI</symbolVar><exprOp>)</exprOp><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>y</tristateConst><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>3</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"Use WTINT"</quotedPrompt><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_SRM</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>y</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_QEMU</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_EV5</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_EV56</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><exprOp>(</exprOp><symbolVar>ALPHA_EV4</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_LCA</symbolVar><exprOp>)</exprOp><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>n</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_SRM</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_GENERIC</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><tristateConst>y</tristateConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>SMP</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"y"</symbolConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>PPC_POWERNV</symbolVar><br/>
<plain>	</plain><property>range</property><plain> </plain><symbolVar>2</symbolVar><plain> </plain><symbolVar>32</symbolVar><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>SMP</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"32"</symbolConst><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ALPHA_GENERIC</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ALPHA_MARVEL</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>'4'</symbolConst><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_GENERIC</symbolVar><plain> </plain><exprOp>&&</exprOp><plain> </plain><exprOp>!</exprOp><symbolVar>ALPHA_MARVEL</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Support VGA on an arbitrary hose; needed for several platforms</helpText><br/>
<helpText>	  which always have multiple hoses, and whose consoles support it.</helpText><br/>
<helpText></helpText><br/>
<keyword>endmenu</keyword><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"ARC Architecture Configuration"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"ARC Platform/SoC/Board"</quotedPrompt><br/>
<plain></plain><br/>
<comment>#New platform adds here</comment><br/>
<source>source </source><quotedSourceString>"arch/arc/plat-eznps/Kconfig"</quotedSourceString><br/>
<source>source </source><quotedSourceString>'arch/arc/plat-hsdk/Kconfig'</quotedSourceString><br/>
<plain></plain><br/>
<keyword>endmenu</keyword><br/>
<plain></plain><br/>
<keyword>menu</keyword><plain> </plain><quotedPrompt>"ARC CPU Configuration"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>choice</keyword><br/>
<plain>	</plain><property>prompt</property><plain> </plain><quotedPrompt>"ARC Core"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>ARC_CPU_HS</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ISA_ARCV2</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  bla bla</helpText><br/>
<helpText></helpText><br/>
<keyword>if</keyword><plain> </plain><symbolVar>ISA_ARCOMPACT</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARC_CPU_750D</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"ARC750D"</quotedPrompt><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>ARC_CANT_LLSC</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Support for ARC750 core</helpText><br/>
<helpText></helpText><br/>
<keyword>endif</keyword><plain> </plain><comment>#ISA_ARCOMPACT</comment><br/>
<plain></plain><br/>
<keyword>endchoice</keyword><br/>
<plain></plain><br/>
<keyword>if</keyword><plain> </plain><symbolVar>SMP</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>NR_CPUS</symbolVar><br/>
<plain>	</plain><type>int</type><plain> </plain><quotedPrompt>"Maximum number of CPUs (2-4096)"</quotedPrompt><br/>
<plain>	</plain><property>range</property><plain> </plain><symbolVar>2</symbolVar><plain> </plain><symbolVar>4096</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolConst>"4"</symbolConst><br/>
<plain></plain><br/>
<keyword>endif</keyword><plain> </plain><comment>#SMP</comment><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARC_MMU_V4</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"MMU v4"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ISA_ARCV2</symbolVar><br/>
<plain></plain><br/>
<keyword>endmenu</keyword><plain>   </plain><comment># "ARC CPU Configuration"</comment><br/>
<plain></plain><br/>
<keyword>menuconfig</keyword><plain> </plain><symbolVar>ARC_PLAT_EZNPS</symbolVar><br/>
<plain>	</plain><type>bool</type><plain> </plain><quotedPrompt>"</quotedPrompt><escapeQuotedPrompt>\"</escapeQuotedPrompt><quotedPrompt>EZchip</quotedPrompt><escapeQuotedPrompt>\"</escapeQuotedPrompt><quotedPrompt> ARC dev platform"</quotedPrompt><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><symbolVar>ISA_ARCOMPACT</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>CPU_BIG_ENDIAN</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>CLKSRC_NPS</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>PHYS_ADDR_T_64BIT</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Support for EZchip development platforms,</helpText><br/>
<helpText>	  based on ARC700 cores.</helpText><br/>
<helpText>	  We handle few flavors:</helpText><br/>
<helpText>	    - Hardware Emulator AKA HE which is FPGA based chassis</helpText><br/>
<helpText>	    - Simulator based on MetaWare nSIM</helpText><br/>
<helpText>	    - NPS400 chip based on ASIC</helpText><br/>
<helpText></helpText><br/>
<comment># </comment><SPDX Tag>SPDX-License-Identifier:</SPDX Tag><SPDX Value> </SPDX Value><SPDX License>GPL-2.0-only</SPDX License><br/>
<keyword>config</keyword><plain> </plain><symbolVar>ARM64</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><tristateConst>y</tristateConst><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>HAVE_DYNAMIC_FTRACE_WITH_REGS</symbolVar><plain> \</plain><br/>
<plain>		</plain><keyword>if</keyword><plain> </plain><symbolVar>$(</symbolVar><plain>cc-option</plain><exprOp>,</exprOp><plain>-fpatchable-function-entry=2</plain><symbolVar>)</symbolVar><br/>
<plain>	</plain><property>select</property><plain> </plain><symbolVar>HAVE_EFFICIENT_UNALIGNED_ACCESS</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  ARM 64-bit (AArch64) Linux support.</helpText><br/>
<helpText></helpText><br/>
<keyword>config</keyword><plain> </plain><symbolVar>PHYS_OFFSET</symbolVar><br/>
<plain>	</plain><type>hex</type><plain> </plain><quotedPrompt>"Physical address of main memory"</quotedPrompt><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>MMU</symbolVar><br/>
<plain>	</plain><property>depends</property><plain> </plain><property>on</property><plain> </plain><exprOp>!</exprOp><symbolVar>ARM_PATCH_PHYS_VIRT</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>DRAM_BASE</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><exprOp>!</exprOp><symbolVar>MMU</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0x00000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_EBSA110</symbolVar><plain> </plain><exprOp>||</exprOp><plain> \</plain><br/>
<plain>			</plain><symbolVar>ARCH_FOOTBRIDGE</symbolVar><plain> </plain><exprOp>||</exprOp><plain> \</plain><br/>
<plain>			</plain><symbolVar>ARCH_INTEGRATOR</symbolVar><plain> </plain><exprOp>||</exprOp><plain> \</plain><br/>
<plain>			</plain><symbolVar>ARCH_REALVIEW</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0x10000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_OMAP1</symbolVar><plain> </plain><exprOp>||</exprOp><plain> </plain><symbolVar>ARCH_RPC</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0x20000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_S5PV210</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0xc0000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>ARCH_SA1100</symbolVar><br/>
<plain>	</plain><property>help</property><br/>
<helpText>	  Please provide the physical address corresponding to the</helpText><br/>
<helpText>	  location of main memory in your system.</helpText><br/>
<helpText></helpText><br/>
<keyword>comment</keyword><plain> </plain><quotedPrompt>"S3C2416 Boards"</quotedPrompt><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>KERNEL_RAM_BASE_ADDRESS</symbolVar><br/>
<plain>	</plain><type>hex</type><plain> </plain><quotedPrompt>"Virtual address of memory base"</quotedPrompt><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0xe0000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>SOC_TMS320C6455</symbolVar><br/>
<plain>	</plain><property>default</property><plain> </plain><symbolVar>0xe0000000</symbolVar><plain> </plain><keyword>if</keyword><plain> </plain><symbolVar>SOC_TMS320C6457</symbolVar><br/>
<plain></plain><br/>
<keyword>config</keyword><plain> </plain><symbolVar>CC_IS_GCC</symbolVar><br/>
<plain>	</plain><property>def_</property><type>bool</type><plain> </plain><symbolVar>$(</symbolVar><plain>success</plain><exprOp>,</exprOp><plain>echo </plain><quotedOptionValue>"$(CC_VERSION_TEXT)"</quotedOptionValue><plain> | grep -q gcc</plain><symbolVar>)</symbolVar><br/>
<plain></plain><br/>
<error>endif # error</error><br/>
<plain></plain><br/>
<comment># next line caused hang, see https://phabricator.kde.org/D18509</comment><br/>
<keyword>menu</keyword><br/>
